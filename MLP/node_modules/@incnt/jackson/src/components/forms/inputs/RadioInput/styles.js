import { css } from 'config/css'
import color from 'color'
import tick    from 'assets/icon-check.svg'

const styles = {
  root: {
    position: 'relative',
    width: props => (props.width) ? `${props.width}px` : '16px',
    height: props => (props.height) ? `${props.height}px` : '16px',
    background: props => props.background || css.colors.white,
    border: props => props.border || `1px solid ${css.colors.charade}`,
    borderRadius: '100%',
    '&:after': {
      borderRadius: '100%',
      content: '\'\'',
      display: 'block',
      position: 'absolute',
      top: '50%',
      left: '50%',
      transform: 'translate(-50%, -50%)',
      width: 0,
      height: 0,
      background: css.colors.white,
      transition: css.transitions.fast,
    },
    '&:before': {
      content: '\'\'',
      display: 'block',
      position: 'absolute',
      top: '50%',
      left: '50%',
      transform: 'translate(-50%, -50%)',
      backgroundImage: `url(${tick})`,
      backgroundSize: 'contain',
      backgroundPosition: 'center center',
      width: 0,
      height: 0,
      transition: css.transitions.fast,
      zIndex: 1,
    },
  },
  active: {
    '&:after': {
      width: props => (props.width) ? `${props.width * 0.5}px` : '8px',
      height: props => (props.height) ? `${props.height * 0.5}px` : '8px',
      background: props => props.background || css.colors.charade,
    },
  },
  complete: {
    '&:after': {
      width: props => (props.width) ? `${props.width}px` : '16px',
      height: props => (props.height) ? `${props.height}px` : '16px',
      background: props => props.success || css.colors.charade,
    },
    '&:before': {
      width: props => (props.width) ? `${props.width / 2}px` : '8px',
      height: props => (props.height) ? `${props.height / 2}px` : '8px',
    },
  },
  error: {
    '&:after': {
      background: props => props.error || css.colors.monza,
    },
  },
  radioInput: {
    position: 'absolute',
    visibility: 'hidden',
    opacity: 0
  }
}


export { styles }