import React       from 'react'
import injectSheet from 'react-jss'
import {css}       from 'config/css'

const vars = {
  burgerThickness: '2px',
  burgerColor: ({theme}) => (theme === 'dark') ? css.colors.white : css.colors.charade,
  burgerSpacing: '8px',
  burgerKerning: '2px',
}

const styles = {
  root: {
    display: 'flex',
    justifyContent: 'flex-end',
    alignItems: 'center',
    height: '100%',
    flex: 'auto',
  },
  innerContainer: {
    display: 'none',
    position: 'absolute',
    top: '100%',
    width: '100%',
    overflowY: 'auto',
    height: 'calc(100vh - 5em)',
    [css.breakpoints.desktop]: {
      display: 'block',
      position: 'relative',
      top: 'initial',
      overflowY: 'initial',
      height: '100%',
      minHeight: '100%',
    },
  },
  innerContainerActive: {
    display: 'block',
  },
  body: {
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'flex-start',
    height: '100%',
    background: ({theme}) => (theme === 'dark') ? css.colors.charade : css.colors.white,
    [css.breakpoints.desktop]: {
      flexDirection: 'row',
      justifyContent: props => props.justifyContent || 'space-between',
    },
  },
  navigationToggle: {
    display: 'flex',
    width: '2em',
    height: '2em',
    margin: '0 1em',
    alignItems: 'center',
    [css.breakpoints.desktop]: {
      display: 'none',
    },
  },
  burgerIcon: {
    width: '100%',
    height: vars.burgerThickness,
    position: 'relative',
    borderRadius: vars.burgerKerning,
    transition: css.transitions.fast,
    '&:after, &:before': {
      content: '\'\'',
      display: 'block',
      width: '100%',
      height: vars.burgerThickness,
      background: vars.burgerColor,
      borderRadius: vars.burgerKerning,
      position: 'absolute',
      transition: css.transitions.fast,
    },
    '&:after': {
      top: vars.burgerSpacing,
    },
    '&:before': {
      top: '-' + vars.burgerSpacing,
    },
  },
  burgerIconInactive: {
    background: vars.burgerColor,
  },
  burgerIconActive: {
    background: 'transparent',
    '&:after': {
      top: 0,
      transform: 'rotate(45deg)',
    },
    '&:before': {
      top: 0,
      transform: 'rotate(-45deg)',
    },
  },
}

const Navigation = injectSheet(styles)(
  class Navigation extends React.Component {
    constructor(props) {
      super(props)
      this.state = {
        navigationActive: props.navigationActive || false,
      }
    }

    closeNav() {
      this.setState({
        navigationActive: false,
      })
    }

    toggleNavigation() {
      const state = this.state || {}
      this.setState({
        navigationActive: !state.navigationActive,
      })
    }

    toggleUserNavigation() {
      this.setState({
        navigationActive: false,
      })
    }

    render() {
      const {classes, children, ...rest} = this.props
      const {navigationActive} = this.state
      return (
        <div className={classes.root}>
          <div className={`${classes.innerContainer} ${navigationActive && classes.innerContainerActive}`}>
            <div className={classes.body}>
              {React.Children.map(
                children,
                child => {
                  if (!React.isValidElement(child)) return child
                  return React.cloneElement(child, {...rest, closeNav: () => this.closeNav(), active: navigationActive})
                },
              )}
            </div>
          </div>
          <Toggle
            classes={classes}
            navigationActive={navigationActive}
            onClick={() => this.setState({
              navigationActive: !this.state.navigationActive,
            })}
          />
        </div>
      )
    }
  },
)

const Toggle = ({classes, rewardBalance, navigationActive, onClick}) => {
  return (
    <div className={classes.toggleContainer}>
      <div className={classes.navigationToggle} onClick={onClick}>
        <button
          role={'none'}
          aria-label='Toggle menu opened'
          className={`${classes.burgerIcon} ${navigationActive ? classes.burgerIconActive : classes.burgerIconInactive}`}
        />
      </div>
    </div>
  )
}

export {Navigation}