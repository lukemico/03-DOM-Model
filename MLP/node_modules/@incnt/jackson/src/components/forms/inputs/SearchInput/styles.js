import {css}        from 'config/css'
import {
  card,
  cardLightTheme,
}                   from 'components/content/cardStyles'

const styles = {
  root: {
    fontWeight: 300,
    position: 'relative',
    display: 'flex',
  },
}

const searchStyles = {
  searchRoot: {
    position: 'relative',
    display: 'flex',
    flex: '100%',
  },
  compactSearchRoot: {},
  actions: {
    position: 'absolute',
    top: '0',
    right: '2em',
    display: 'flex',
  },
  compactActions: {
    display: ({searching}) => searching ? 'flex' : 'none',
  },
  action: {
    transition: css.transitions.fast,
  },
  activeAction: {
    opacity: 1,
    visibility: 'visible',
  },
  inactiveAction: {
    opacity: 0,
    visibility: 'hidden',
  },
  input: {
    width: '100%',
    padding: '0 2em 0 0.5em',
    lineHeight: 2.15,
    boxShadow: `inset ${css.shadows.medium}`,
    borderRadius: '3px',
    background: css.colors.white,
    '&:focus': {
      background: css.colors.alabaster,
    },
    '&:hover': {
      background: css.colors.alabaster,
    },
  },
  compactInput: {
    willChange: 'width, padding, opacity, visibility',
    transform: 'translateZ(0)',
    padding: ({searching}) => searching ? 'invalid' : 0,
    width: ({searching}) => searching ? '100%' : 0,
    opacity: ({searching}) => searching ? 1 : 0,
    visibility: ({searching}) => searching ? 'visible' : 'hidden',
  },
  searchIcon: {
    width: '2em',
    display: 'block',
    position: 'relative',
    height: '2em',
    cursor: 'pointer',
  },
  searchButton: {
    flex: '2em',
  },
  searchIconRaised: {
    ...card,
    ...cardLightTheme,
    transition: css.transitions.fast,
    '&:hover': {
      background: css.colors.alabaster,
      boxShadow: css.shadows.lowHover,
    },
  },
  cancelIcon: {
    width: '2em',
    display: 'block',
    position: 'relative',
    height: '2em',
  },
  cancelButton: {
    flex: '2em',
  },
}
const resultStyles = {
  root: {
    position: 'absolute',
    top: '100%',
    margin: '0.5rem auto 0',
    width: '100%',
    zIndex: '10',
    filter: `drop-shadow(${css.shadows.medium})`,
    background: css.colors.white,
    transition: css.transitions.fast,
    borderRadius: css.boxModel.roundCorners,
    opacity: 0,
  },
  innerContainer: {
    maxHeight: 0,
    overflowY: 'auto',
  },
  innerContainerActive: {
    maxHeight: '200px',
  },
  resultsActive: {
    opacity: 1,
  },
}

export {styles, searchStyles, resultStyles}
