import React         from 'react'
import injectSheet   from 'react-jss'
import StoryRouter   from 'storybook-react-router'
import {storiesOf}   from '@storybook/react'
import {action}      from '@storybook/addon-actions'
import {checkA11y}   from '@storybook/addon-a11y'
import {SearchInput} from 'components/forms/inputs/SearchInput'
import {stores}      from 'util/stores'
import 'stylesheets/index.sass'
import withTests     from 'config/withTests'

storiesOf('Forms/Inputs/Search', module)
  .addDecorator(StoryRouter())
  .addDecorator(withTests('SearchInput'))
  .addDecorator(checkA11y)
  .add('Default', () => (
    <SearchInput
      results={<StoreResults/>}
      onClick={action('onClick')}
      onBlur={action('onBlur')}
      onFocus={action('onFocus')}
      onInput={action('onInput')}
      onSearch={action('onSearch')}
      onCancel={action('onCancel')}
    />
  ))
  .add('Compact', () => (
    <SearchInput
      compact={true}
      results={<StoreResults/>}
      onClick={action('onClick')}
      onBlur={action('onBlur')}
      onFocus={action('onFocus')}
      onInput={action('onInput')}
      onSearch={action('onSearch')}
      onCancel={action('onCancel')}
    />
  ))

const StoreResults = injectSheet({
  list: {
    padding: '0.5rem 0',
  },
})(({classes}) => {
  const Item = (store) => <li><Result result={store}/></li>
  const children = stores.map(store => React.createElement(Item, store))
  return (
    <ul className={classes.list}>
      {React.Children.map(children, child => {
        if(!React.isValidElement(child)) return child
        return React.cloneElement(child)
      })}
    </ul>
  )
})

const Result = injectSheet({
  result: {
    padding: '0.5rem 1rem',
  },
})(({classes, result}) => (
  <a className={classes.result} href="javascript:null" onClick={action('Clicked result')}>
    {result.title}
  </a>
))