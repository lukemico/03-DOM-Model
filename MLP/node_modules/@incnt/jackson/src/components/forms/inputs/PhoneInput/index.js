import React         from 'react'
import {SelectInput} from 'components/forms/inputs/SelectInput'
import injectSheet   from 'react-jss'
import {countries}   from 'config/countries'
import {
  styles,
  countrySelectStyles,
  countryCodeStyles,
  numberInputStyles,
  countryLabelStyles,
}                    from './styles'


const PhoneInput = injectSheet(styles)(
  class PhoneInput extends React.Component {
    constructor(props) {
      super(props)
      this.state = {
        country: props.country ? getCountryFromCode(props.country) : getCountryFromCode('AU'),
        number: props.number || '',
        selectingCountryCode: false,
      }
    }

    render() {
      const {country, number, selectingCountryCode} = this.state
      const {classes, onCountryBlur, onNumberBlur, onCountryChange, onNumberChange, countryName, numberName, compact} = this.props
      return (
        <div className={classes.root}>
          <div className={classes.countryInput}>
            <div className={`${classes.countryCode} ${(!selectingCountryCode) ? classes.countryCodeActive : ''}`}>
              <CountryCode
                country={country}
                number={number}
                onClick={() => this.setState({selectingCountryCode: true})}
              />
            </div>
            <div className={`${classes.countrySelect} ${(selectingCountryCode) ? classes.countrySelectActive : ''}`}>
              <CountrySelect
                country={optionFromCountry(country)}
                selectCountry={e => {
                  this.selectCountry(e)
                  this.setState({selectingCountryCode: false})
                  if (typeof onCountryChange === 'function') onCountryChange(e)
                }}
                name={countryName}
                onBlur={onCountryBlur}
                compact={compact}
              />
            </div>
          </div>
          <div className={`${classes.numberInput} ${(!selectingCountryCode) ? classes.numberInputActive : ''}`}>
            <NumberInput
              number={number}
              name={numberName}
              placeholder={'Phone number'}
              onChange={e => {
                this.updateNumber(e.target.value)
                if (typeof onNumberChange === 'function') onNumberChange(e)
              }}
              onBlur={onNumberBlur}
              aria-label={this.props['aria-label']}
            />
          </div>
        </div>
      )
    }

    selectCountry(e) {
      const country = getCountryFromCode(e.target.value)
      this.updateCountry(country)
    }

    updateCountry(country) {
      this.setState({country})
    }

    updateNumber(number) {
      this.setState({number})
    }
  },
)

const CountryCode = injectSheet(countryCodeStyles)(({classes, number, country, onClick}) => (
  <div className={classes.root} onClick={onClick}>
    <img className={classes.image}
         alt={`Selected country ${name}`}
         src={`https://cdn.rawgit.com/hjnilsson/country-flags/master/svg/${country.al.toLowerCase()}.svg`}/>
    <div className={classes.callingCode}>{country.cc && `+${country.cc[0]}`}</div>
    <div className={classes.name}>{country.name}</div>
  </div>
))

const CountrySelect = injectSheet(countrySelectStyles)(({classes, selectCountry, country, name, onBlur, compact}) => (
  <div className={classes.root}>
    <SelectInput
      placeholder={'Please select a country code.'}
      options={countries.map(country => optionFromCountry(country))}
      value={country.al}
      label={country.label}
      name={name}
      onInput={selectCountry}
      onChange={selectCountry}
      onBlur={onBlur}
      compact={compact}
    />
  </div>
))

const NumberInput = injectSheet(numberInputStyles)((props) => {
  const {classes, number, onChange, placeholder, name, onBlur} = props
  return (
    <div className={classes.root}>
      <input
        className={classes.input}
        type="text"
        placeholder={placeholder}
        value={number}
        onChange={onChange}
        name={name}
        onBlur={onBlur}
        aria-label={`${props['aria-label']} Phone Number`}
      />
    </div>
  )
})

const CountryLabel = injectSheet(countryLabelStyles)(({classes, name, al, cc}) => (
  <div className={classes.root}>
    <img className={classes.image}
         alt={`Selected country ${name}`}
         src={`https://cdn.rawgit.com/hjnilsson/country-flags/master/svg/${al.toLowerCase()}.svg`}/>
    <div className={classes.name}>{name}</div>
    <div className={classes.code}>+{cc[0]}</div>
  </div>
))

export {PhoneInput}

function getCountryFromCode(countryCode) {
  const hits = countries.filter(country => country.al === countryCode)
  return hits[0] || {}
}

const optionFromCountry = ({name, al, cc}) => ({
  value: al,
  label: `(+${cc && cc[0]}) ${name}`,
  labelComponent: (<CountryLabel name={name} al={al} cc={cc}/>),
})
