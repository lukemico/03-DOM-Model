import React from 'react'
import renderer from 'react-test-renderer';
import {mount} from 'enzyme'
import {StyledSwitchInput} from './SwitchInput.view'

describe('SwitchInput', () => {
  const expectCorrectValueToBePassedInChangeHandler = (initialValue) => {
    const handler = jest.fn();
    const component = mount(<StyledSwitchInput value={initialValue} onChange={handler} />);

    component.find('input').simulate('change');

    expect(handler.mock.calls[0][0]).toBe(!initialValue);
  }

  it('should render a checked input', () => {
    const component = renderer
      .create(<StyledSwitchInput value={true} onChange={() => {}}/>)
      .toJSON();
    expect(component).toMatchSnapshot();
  });

  it('should accept an unchecked input', () => {
    const component = renderer
      .create(<StyledSwitchInput value={false} onChange={() => {}} />)
      .toJSON();
    expect(component).toMatchSnapshot();
  });

  it('should pass false when initial value is true', () => {
    expectCorrectValueToBePassedInChangeHandler(true);
  });

  it('should pass true when initial value is false', () => {
    expectCorrectValueToBePassedInChangeHandler(false);
  });
})
