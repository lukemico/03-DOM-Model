import React                            from 'react'
import injectSheet                      from 'react-jss'
import {Link}                           from 'react-router-dom'
import StoryRouter                      from 'storybook-react-router'
import {storiesOf}                      from '@storybook/react'
import {action}                         from '@storybook/addon-actions'
import {checkA11y}                      from '@storybook/addon-a11y'
import {withKnobs, boolean}             from '@storybook/addon-knobs'
import withTests                        from 'config/withTests'
import logo                             from 'assets/logo-beta.svg'
import lightLogo                        from 'assets/logo-beta-lightbg.svg'
import {Header}                         from 'components/widgets/Header'
import {Logo}                           from 'components/widgets/Logo'
import {Navigation}                     from 'components/widgets/Menus/Navigation'
import {Menu}                           from 'components/widgets/Menus/Menu'
import {MenuItem}                       from 'components/widgets/Menus/MenuItem'
import {PrimaryButton, SecondaryButton} from 'components/forms/buttons'
import {SearchInput}                    from 'components/forms/inputs/SearchInput'
import {stores}                         from 'util/stores'
import {css}                            from 'config/css'
import 'stylesheets/index.sass'

storiesOf('Widgets/Header', module)
  .addDecorator(checkA11y)
  .addDecorator(withKnobs)
  .addDecorator(withTests('Menu'))
  .addDecorator(StoryRouter())
  .add('Dark', () => (
    <Header theme={'dark'} loggedIn={boolean('Logged In')}>
      <LogoWithSpacing image={logo}/>
      <Navigation>
        <Menu>
          <MenuItem Component={Link} to={'/'}>Home</MenuItem>
          <MenuItem Component={Link} to={'/'}>Marketplace</MenuItem>
          <MenuItem Component={Link} to={'/'}>Stores</MenuItem>
          <MenuItem Component={Link} to={'/'}>About Us</MenuItem>
        </Menu>
        <Menu>
          <BigMenuItem Component={SearchInput} results={<StoreResults/>} compact={true}/>
          <SmallMenuItem withLogin={l => !!l} Component={Link} to={'/'} onClick={action('Click')}>
            My Account
          </SmallMenuItem>
          <SmallMenuItem withLogin={l => !l} Component={SecondaryButton} onClick={action('Click')}>Log
            In</SmallMenuItem>
          <SmallMenuItem withLogin={l => !l} Component={PrimaryButton} onClick={action('Click')}>Sign Up</SmallMenuItem>
        </Menu>
      </Navigation>
    </Header>
  ))
  .add('Light', () => (
    <Header theme={'light'} loggedIn={boolean('Logged In')}>
      <LogoWithSpacing image={lightLogo}/>
      <Navigation>
        <Menu>
          <MenuItem Component={Link} to={'/'}>Home</MenuItem>
          <MenuItem Component={Link} to={'/'}>Marketplace</MenuItem>
          <MenuItem Component={Link} to={'/'}>Stores</MenuItem>
          <MenuItem Component={Link} to={'/'}>About Us</MenuItem>
        </Menu>
        <Menu>
          <MenuItem Component={SearchInput} results={<StoreResults/>} compact={false}/>
        </Menu>
        <Menu>
          {/*<BigMenuItem Component={SearchInput} results={<StoreResults/>} compact={true}/>*/}
          <MenuItem withLogin={l => !!l} Component={Link} to={'/'} onClick={action('Click')}>My Account</MenuItem>
          <MenuItem withLogin={l => !l} Component={SecondaryButton} onClick={action('Click')}>Log In</MenuItem>
          <MenuItem withLogin={l => !l} Component={PrimaryButton} onClick={action('Click')}>Sign Up</MenuItem>
        </Menu>
      </Navigation>
    </Header>
  ))

const LogoWithSpacing = injectSheet({
  root: {
    [css.breakpoints.desktop]: {
      marginRight: '5em',
    },
  },
})(({classes, children, ...rest}) => (<Logo className={classes.root} {...rest}>{children}</Logo>))

const SmallMenuItem = injectSheet({
  root: {
    flex: '50%',
    [css.breakpoints.tablet]: {
      flex: 1,
    },
  },
})(({classes, children, ...rest}) => (
  <MenuItem className={classes.root} {...rest}>{children}</MenuItem>
))

const BigMenuItem = injectSheet({
  root: {
    flex: '100%',
    [css.breakpoints.tablet]: {
      flex: 4,
    },
    [css.breakpoints.desktop]: {
      flex: 3,
    },
  },
})(({classes, children, ...rest}) => (
  <MenuItem className={classes.root} {...rest}>{children}</MenuItem>
))

const StoreResults = injectSheet({
  list: {
    padding: '0.5rem 0',
  },
})(({classes, ...rest}) => {
  const Item = (store) => <li><Result result={store} {...rest}/></li>
  const children = stores.map(store => React.createElement(Item, store))
  return (
    <ul className={classes.list}>
      {React.Children.map(children, child => {
        if (!React.isValidElement(child)) return child
        return React.cloneElement(child)
      })}
    </ul>
  )
})

const Result = injectSheet({
  result: {
    padding: '0.5rem 1rem',
    color: ({theme}) => theme === 'dark' ? css.colors.black : css.colors.black // the list background doesnt change
                                                                               // colour but color is overridden from a
                                                                               // parent
  },
})(({classes, result}) => (
  <div className={classes.result}>
    {result.title}
  </div>
))